---
import Layout from "../../layouts/Layout.astro";
import { getBlogs } from "../../library/microcms";

let response;
let error = null;

try {
  response = await getBlogs({ fields: ["id", "title", "publishedAt"] });
} catch (err) {
  error = "ブログ記事の取得に失敗しました。";
  console.error("microCMS API Error: Failed to fetch blog posts");
}
---

<Layout title="ブログ一覧">
  <div class="blog-list-container">
    <header class="page-header">
      <h1 class="page-title">ブログ一覧</h1>
      <p class="page-description">microCMSと連携したブログ記事の一覧です。</p>
    </header>

    {
      error ? (
        <div class="error-message">
          <h2>エラーが発生しました</h2>
          <p>ブログデータの取得に失敗しました。</p>
          <details>
            <summary>エラー詳細</summary>
            <pre>{error.message}</pre>
          </details>
        </div>
      ) : response && response.contents ? (
        <div class="blog-list">
          {response.contents.map(content => (
            <article class="blog-item">
              <a href={`/blog/${content.id}`} class="blog-link">
                <h2 class="blog-title">{content.title}</h2>
                <div class="blog-meta">
                  <time class="published-date">
                    {new Date(content.publishedAt).toLocaleDateString("ja-JP")}
                  </time>
                </div>
              </a>
            </article>
          ))}
        </div>
      ) : (
        <div class="no-content">
          <p>ブログ記事がありません。</p>
        </div>
      )
    }
  </div>
</Layout>

<style>
  .blog-list-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
    line-height: 1.7;
  }

  .page-header {
    margin-bottom: 3rem;
    border-bottom: 2px solid #eee;
    padding-bottom: 1.5rem;
  }

  .page-title {
    font-size: 2.5rem;
    font-weight: bold;
    color: #333;
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }

  .page-description {
    color: #666;
    font-size: 1.1rem;
    margin: 0;
  }

  .blog-list {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .blog-item {
    padding: 0;
    border: 1px solid #eee;
    border-radius: 12px;
    background-color: #fff;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    overflow: hidden;
  }

  .blog-link {
    display: block;
    padding: 2rem;
    text-decoration: none;
    color: inherit;
    transition: all 0.3s ease;
  }

  .blog-link:hover {
    color: inherit;
  }

  .blog-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    border-color: #007acc;
  }

  .blog-title {
    margin: 0 0 1rem 0;
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.4;
    color: #333;
  }

  .blog-link:hover .blog-title {
    color: #007acc;
  }

  .blog-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .published-date {
    color: #666;
    font-size: 0.9rem;
    font-weight: 500;
  }

  .no-content {
    text-align: center;
    padding: 3rem 0;
    color: #666;
    font-style: italic;
  }

  .error-message {
    background-color: #fee;
    border: 1px solid #fcc;
    border-radius: 12px;
    padding: 2rem;
    margin: 2rem 0;
  }

  .error-message h2 {
    color: #c33;
    margin: 0 0 0.5rem 0;
    font-size: 1.3rem;
  }

  .error-message p {
    color: #666;
    margin: 0 0 1rem 0;
  }

  .error-message details {
    margin-top: 1rem;
  }

  .error-message summary {
    cursor: pointer;
    color: #007acc;
    font-weight: 500;
  }

  .error-message pre {
    background-color: #f5f5f5;
    padding: 1rem;
    border-radius: 8px;
    font-size: 0.9rem;
    overflow-x: auto;
    margin-top: 0.5rem;
    border: 1px solid #ddd;
  }

  /* レスポンシブデザイン */
  @media (max-width: 768px) {
    .blog-list-container {
      padding: 1rem;
    }

    .page-title {
      font-size: 2rem;
    }

    .blog-item {
      padding: 0;
    }

    .blog-link {
      padding: 1.5rem;
    }

    .blog-title {
      font-size: 1.3rem;
    }
  }

  @media (max-width: 480px) {
    .page-title {
      font-size: 1.8rem;
    }

    .blog-item {
      padding: 0;
    }

    .blog-link {
      padding: 1rem;
    }

    .blog-title {
      font-size: 1.2rem;
    }
  }
</style>
